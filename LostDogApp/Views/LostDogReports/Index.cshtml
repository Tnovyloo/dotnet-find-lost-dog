@model LostDogApp.ViewModels.LostDogReportViewModels.IndexFilterViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Wszystkie zgubione pupile</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Stwórz ogłoszenie</a>
</p>

<div id="map" style="height: 500px; margin-bottom: 20px;"></div>

<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <input type="text" name="dogNameQuery" value="@Model.DogNameQuery" class="form-control" placeholder="Imię psa" />
    </div>
    <div class="col-md-3">
        <select name="selectedVoivodeship" class="form-select">
            <option value="">-- Województwo --</option>
            @foreach (var v in Model.AvailableVoivodeships)
            {
                <option value="@v" selected="@(v == Model.SelectedVoivodeship)">
                    @v
                </option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <select name="selectedCity" class="form-select">
            <option value="">-- Miasto --</option>
            @foreach (var c in Model.AvailableCities)
            {
                <option value="@c" selected="@(c == Model.SelectedCity)">
                    @c
                </option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <button type="submit" class="btn btn-primary">Filtruj</button>
        <a type="" class="btn btn-danger" asp-controller="LostDogReports" asp-action="Index">Usun</a>
    </div>
</form>

<div class="row">
    @foreach (var item in Model.Reports)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <img src="@Html.DisplayFor(modelItem => item.ImagePath)" class="card-img-top" alt="Zdjęcie psa" style="height: 200px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.DogName)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    <ul class="list-unstyled mb-3">
                        <li><strong>Numer kontaktowy:</strong> @Html.DisplayFor(modelItem => item.ContactNumber)</li>
                        <li><strong>Miasto:</strong> @(item.City?.Name ?? "Nieznane")</li>
                        <li><strong>Województwo:</strong> @(item.City?.Voivodeship ?? "Nieznane")</li>
                    </ul>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Szczegóły</a>
                </div>
            </div>
        </div>
    }
</div>

<nav aria-label="Stronicowanie">
    <ul class="pagination justify-content-center">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@i"
                   asp-route-selectedVoivodeship="@Model.SelectedVoivodeship"
                   asp-route-selectedCity="@Model.SelectedCity"
                   asp-route-dogNameQuery="@Model.DogNameQuery">
                    @i
                </a>
            </li>
        }
    </ul>
</nav>


@section Scripts {
    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        var map = L.map('map').setView([0, 0], 2); // Default view

        // Add tile layer (OpenStreetMap)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        var bounds = [];

        // Dog marker data from Razor
        var dogReports = [
            @foreach (var dog in Model.Reports)
            {
                if (dog.Latitude != 0 && dog.Longitude != 0)
                {
                    var detailsUrl = Url.Action("Details", "LostDogReports", new { id = dog.Id });

                    <text>
                    {
                        lat: @dog.Latitude,
                        lng: @dog.Longitude,
                        name: "@dog.DogName",
                        description: "@dog.Description",
                        image_path: "@dog.ImagePath",
                        details_url: "@detailsUrl",
                    },
                    </text>
                }
            }
        ];

        // Add markers
        dogReports.forEach(function (report) {
            var marker = L.marker([report.lat, report.lng])
                .addTo(map)
                .bindPopup(`<img style="height: 100px" src="${report.image_path}" ></img><strong>` + report.name + "</strong><br/>" + report.description + `<a href="${report.details_url}">Zobacz ogłoszenie</a>`);
            bounds.push([report.lat, report.lng]);
        });

        // Fit map to markers
        if (bounds.length > 0) {
            map.fitBounds(bounds);
        }
    </script>
}
